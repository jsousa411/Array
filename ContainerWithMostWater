/*
Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.
*/

public class Solution {
    
    public int MaxArea(int[] height) {
        
        int i = 0,
            j = height.Length-1,
            NewMax = 0,
            Max = 0,
            X = 0,
            Y = j;
        
        // traverse array looking for max (height * distance)
        while(i < j)
        {
            // compare potential new area to existing max area
            NewMax = Math.Max(Max,Math.Min(height[i],height[j])*Math.Abs(j-i));
            
            // store new area if it's greater
            if(NewMax >= Max)
            {
                Max = NewMax;
            }
            
            // increase or decrease based on smallest height
            if(height[i] > height[j])
            {
                j--;
            }
            else
            {
                i++;
            }
        }
        
        return Max;
    }
    
}
