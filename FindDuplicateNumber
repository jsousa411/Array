
/*
Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.

Example 1:

Input: [1,3,4,2,2]
Output: 2
Example 2:

Input: [3,1,3,4,2]
Output: 3
*/
public class Solution {
    public int FindDuplicate(int[] nums) {
       
      int   first = 0,
            second = nums[0],
            Value1 = nums[0],
            Value2 = 0;
        
        do
        {
            
            first = nums[first];
            second = nums[nums[second]];
            
        }while(first!=second);
 
         
        Value1 = nums[0];
        Value2 = first;
        
        while(Value1 != Value2)
        {
           // Console.WriteLine($"V1 {Value1} and V2 {Value2}");
            Value1 = nums[Value1];
            Value2 = nums[Value2];
            
        }
        
        return Value1;
        
    }
}
