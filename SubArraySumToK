/*
560. Subarray Sum Equals K
Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.

Example 1:
Input:nums = [1,1,1], k = 2
Output: 2
Note:
The length of the array is in range [1, 20,000].
The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].
*/

public class Solution {
    public int SubarraySum(int[] nums, int k) {
        
        int i = 0;
        int sum = 0;
        int[] calc = new int[nums.Length];
        
        calc[0] = nums[0];
        
        for(int j = 1; j < nums.Length; j++)
        {
            calc[j] = calc[j-1]+nums[j];
        }
        
        for(int z = 0; z < nums.Length; z++)
        {
            if(calc[z] == k)sum++;
            for(int m = 0; m < nums.Length; m++)
            {
                if(calc[m]-calc[z] == k) 
                {
                    sum++;
                }
            }
        }
        
        return sum;
    }
}
