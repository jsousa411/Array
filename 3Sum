/*

Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]


*/

public class Solution {
    public IList<IList<int>> ThreeSum(int[] nums) {
        
        IList<IList<int>> Result = new List<IList<int>>();
        
        Array.Sort(nums);
        
        for(int Left = 0; Left < nums.Length-1; Left++)
        {
            if( Left > 0 && nums[Left] == nums[Left-1]) 
                continue;
            
            for(int NextLeft = Left+1, Right = nums.Length-1; NextLeft < Right && Left < nums.Length-1; )
            {
                if(nums[Left]+nums[NextLeft] < -nums[Right])
                {
                    NextLeft++;
                }
                else if(nums[Left] + nums[NextLeft] > -nums[Right])
                {
                    Right--;
                }
                else
                {
                    // in this case we found a value for the triplet
                    IList<int> SubSet = new List<int>();
                    
                    SubSet.Add(nums[Left]);
                    SubSet.Add(nums[NextLeft]);
                    SubSet.Add(nums[Right]);
                    Result.Add(SubSet);
                    
                    NextLeft++;
                    Right--; 
                    
                    while(NextLeft < Right && nums[NextLeft] == nums[NextLeft-1])
                        NextLeft++;
                    while(Right > NextLeft && nums[Right] == nums[Right+1])
                        Right--;
                    
                   
                }
            }
        }
        
        return Result;
        
    }
}
